name: vprofile actions
on: workflow_dispatch
env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: vprofileapp
  EKS_CLUSTER: vprofile-cluster

jobs:
  Testing:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Maven Testing
        run: mvn test

      - name: Checkstyle
        run: mvn checkstyle:checkstyle

      - name: Set java 11
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11

      - name: Set up SonarQube Scan
        uses: warchant/setup-sonar-scanner@v7

      - name: SonarQube Scan
        run: |
          sonar-scanner \
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }} \
            -Dsonar.host.url=${{ secrets.SONAR_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.sources=src/ \
            -Dsonar.junit.reportPaths=target/surefire-reports/ \
            -Dsonar.jacoco.reportPaths=target/jacoco.exec \
            -Dsonar.java.binaries=target/test-classes/com/visualpathit/account/controllerTest/ \
            -Dsonar.java.checkstyle.reportPaths=target/checkstyle-result.xml

  #    - name: sonarqube quality gate checkout
   #     id: sonarqube-quality-gate-checkout
    #    uses: sonarsource/sonarqube-quality-gate-action@master
     #   timeout-minutes: 5
      #  env:
       #   SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        #  SONAR_HOST_URL: ${{ secrets.SONAR_URL }}
          

  BUILD_AND_PUBLISH:
    runs-on: ubuntu-latest
    needs: Testing
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

 
      - name: Build & Upload to ECR
        uses: appleboy/docker-ecr-action@master
        with:
          access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          registry: ${{ secrets.REGISTRY }}
          repo: ${{ env.ECR_REPOSITORY }}
          region: ${{ env.AWS_REGION }}
          tags: latest, ${{ github.run_number }}
          daemon_off: false
          dockerfile: ./Dockerfile
          context: ./

   
  